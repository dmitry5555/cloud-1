- hosts: webservers
  become: true
  tasks:
    - name: ✏️ Check Docker version
      shell: |
        docker --version
        docker-compose --version
      register: docker_version_info

    - name: ✏️ Docker Version Info 
      debug:
        var: docker_version_info.stdout_lines

    - name: Create user deploy
      user:
        name: deploy
        shell: /bin/bash
        create_home: yes
        system: yes
  
    - name: Create app directory
      file:
        path: /home/deploy/my-app
        state: directory
        owner: deploy
        group: deploy
        mode: 0755

    - name: 💿 Copy docker-compose.yml
      copy:
        src: ../docker-compose.yml
        dest: /home/deploy/my-app/docker-compose.yml
        owner: deploy
        group: deploy
        mode: 0644
 
    - name: ✏️ Show domain name
      debug:
        msg: "Current domain: {{ ansible_site_domain }}"
        
    - name: 💿 Create .env 
      copy:
        content: |
          DB_NAME={{ lookup('env', 'DB_NAME') }}
          DB_USER={{ lookup('env', 'DB_USER') }}
          DB_PASSWORD={{ lookup('env', 'DB_PASSWORD') }}
          DB_HOST={{ lookup('env', 'DB_HOST') }}
          DB_DOMAIN={{ ansible_site_domain }}
          HOST_DOMAIN={{ ansible_site_domain }}

        dest: /home/deploy/my-app/.env
        owner: deploy
        group: deploy
        mode: 0644

    - name: Clean cont. + images from Docker
      shell: docker system prune -af

    - name: 💿 Copy tar images
      copy:
        src: ../{{ item }}
        dest: /home/deploy/my-app/{{ item }}
        owner: deploy
        group: deploy
        mode: 0644
      loop:
        - mariadb.tar
        - nginx.tar
        - wordpress.tar
        - phpmyadmin.tar
      ignore_errors: yes
      register: copy_results

    - name: 🐳 Load Docker images
      shell: docker load -i "/home/deploy/my-app/{{ item.item }}"
      args:
        chdir: /home/deploy/my-app
      loop: "{{ copy_results.results }}"
      when: item.changed | default(false)
      ignore_errors: yes

    - name: 🐳 Stop containers and volumes docker-compose
      shell: docker-compose down
      args:
        chdir: /home/deploy/my-app

    # --force-recreate
    - name: 🐳 Deploy
      block:
        - name: Deploy services
          command: docker-compose up -d
          args:
            chdir: /home/deploy/my-app
