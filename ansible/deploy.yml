---
- hosts: webservers
  become: true
  tasks:
    - name: Создание пользователя deploy
      user:
        name: deploy
        shell: /bin/bash
        create_home: yes
        system: yes
  
    - name: Создание директории развертывания
      file:
        path: /home/deploy/my-app
        state: directory
        owner: deploy
        group: deploy
        mode: 0755

    - name: Копирование docker-compose.yml
      copy:
        src: ../docker-compose.yml
        dest: /home/deploy/my-app/docker-compose.yml
        owner: deploy
        group: deploy
        mode: 0644
 
    # - name: Создание .env файла
    #   copy:
    #     content: |
    #       MARIADB_ROOT_PASSWORD=rootpassword
    #       MARIADB_DATABASE=wordpress
    #       MARIADB_USER=wordpress
    #       MARIADB_PASSWORD=wordpress
    #       HOST_DOMAIN={{ ansible_domain }}
    #     dest: /home/deploy/my-app/.env
    #     owner: deploy
    #     group: deploy
    #     mode: 0644

    - name: Исправление прав доступа на существующий .env файл
      file:
        path: /home/deploy/my-app/.env
        owner: deploy
        group: deploy
        mode: 0644
      when: false  # Включите, если хотите использовать этот вариант вместо создания


    - name: Копирование tar-архивов Docker-образов
      copy:
        src: ../{{ item }}
        dest: /home/deploy/my-app/{{ item }}
        owner: deploy
        group: deploy
        mode: 0644
      loop:
        - mariadb.tar
        - nginx.tar

    - name: Загрузка Docker-образов
      command: docker load -i /home/deploy/my-app/{{ item }}
      args:
        chdir: /home/deploy/my-app
      loop:
        - mariadb.tar
        - nginx.tar
      ignore_errors: true # Игнорировать ошибки, если образы уже загружены

    - name: Запуск docker-compose
      command: docker-compose up -d
      args:
        chdir: /home/deploy/my-app
      environment:
        HOST_DOMAIN: "{{ ansible_domain }}"
      ignore_errors: true # Игнорировать ошибки при первом запуске