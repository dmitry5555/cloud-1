name: Cloud-0

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker Login
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker images
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/mariadb:${GITHUB_SHA::7} -f ./mariadb/Dockerfile ./mariadb
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/mariadb:${GITHUB_SHA::7}
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${GITHUB_SHA::7} -f ./nginx/Dockerfile ./nginx
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${GITHUB_SHA::7}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Deploy via ssh-action
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Создаем директорию для проекта, если её нет
            echo "Creating project directory..."
            mkdir -p ~/cloud-1
            
            # Останавливаем и удаляем старые контейнеры
            echo "Stopping and removing old containers..."
            docker stop nginx mariadb || true
            docker rm nginx mariadb || true

            # Получаем новые образы
            echo "Pulling latest images with love..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/mariadb:${GITHUB_SHA::7}
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${GITHUB_SHA::7}
            
            # Создаем docker-compose.yml файл
            echo "Creating docker-compose.yml file..."
            cat > ~/cloud-1/docker-compose.yml << 'EOF'
            services:
              nginx:
                image: ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${GITHUB_SHA::7}
                ports:
                  - 80:80
                  - 443:443
                # Временно отключаем том для проверки работы
                # volumes:
                #   - wp_vol:/var/www/html
            
              mariadb:
                image: ${{ secrets.DOCKERHUB_USERNAME }}/mariadb:${GITHUB_SHA::7}
                volumes:
                  - db_vol:/var/lib/mysql
            
            volumes:
              db_vol:
                driver: local
              wp_vol:
                driver: local
            EOF
            
            # Запускаем контейнеры
            echo "Starting containers with docker-compose..."
            cd ~/cloud-1
            docker-compose up -d
            
            # Настраиваем файрвол
            echo "Setting up firewall (UFW)..."
            sudo apt update
            sudo apt install -y ufw
            sudo ufw allow OpenSSH
            sudo ufw allow 80
            sudo ufw allow 443
            sudo ufw deny 3306
            sudo ufw --force enable
            sudo ufw status

            # Проверяем логи контейнера nginx для диагностики
            echo "Checking nginx container logs..."
            docker logs nginx
            
            echo "Deployment complete!!!!"