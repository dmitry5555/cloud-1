name: Cloud-0

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker Login
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker images
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/mariadb:${GITHUB_SHA::7} -f ./mariadb/Dockerfile ./mariadb
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/mariadb:${GITHUB_SHA::7}
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${GITHUB_SHA::7} -f ./nginx/Dockerfile ./nginx
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${GITHUB_SHA::7}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Test SSH Connection
        run: |
          ssh -v -i ~/.ssh/id_rsa ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "echo Connection test successful"

      - name: Deploy to Server
        run: |
          export DOCKERHUB_USERNAME="${{ secrets.DOCKERHUB_USERNAME }}"
          export GITHUB_SHA_SHORT="${GITHUB_SHA::7}"
          
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOT'
            echo "Останавливаю и удаляю старые контейнеры..."
            docker stop nginx mariadb || true
            docker rm nginx mariadb || true

            echo "Загружаю новые образы..."
            docker pull ${DOCKERHUB_USERNAME}/mariadb:${GITHUB_SHA_SHORT}
            docker pull ${DOCKERHUB_USERNAME}/nginx:${GITHUB_SHA_SHORT}

            echo "Запускаю контейнеры через docker-compose..."
            cd ~/cloud-1
            docker-compose up -d

            echo "Настраиваю файрвол (UFW)..."
            sudo apt update
            sudo apt install -y ufw
            sudo ufw allow OpenSSH
            sudo ufw allow 80
            sudo ufw allow 443
            sudo ufw deny 3306
            sudo ufw --force enable
            sudo ufw status

            echo "Деплой завершен успешно!"
          EOT

      - name: Clean up
        if: always()
        run: rm -f ~/.ssh/id_rsa