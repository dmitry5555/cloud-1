name: Cloud-0

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker Login
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker images
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/mariadb:${GITHUB_SHA::7} -f ./mariadb/Dockerfile ./mariadb
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/mariadb:${GITHUB_SHA::7}
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${GITHUB_SHA::7} -f ./nginx/Dockerfile ./nginx
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${GITHUB_SHA::7}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Test SSH Connection
        uses: fifsky/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          user: ${{ secrets.SSH_USERNAME }}
          pass: ${{ secrets.SSH_PASSWORD }}
          command: echo "Connection test successful"

      - name: Deploy with SSH
        uses: fifsky/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          user: ${{ secrets.SSH_USERNAME }}
          pass: ${{ secrets.SSH_PASSWORD }}
          command: |
            echo "Останавливаю и удаляю старые контейнеры..."
            docker stop nginx mariadb || true
            docker rm nginx mariadb || true

            echo "Загружаю новые образы..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/mariadb:${GITHUB_SHA::7}
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${GITHUB_SHA::7}

            echo "Создаю docker-compose.yml с новыми образами..."
            cd ~/cloud-1
            
            # Заменяем директивы build на image в docker-compose.yml
            sed -i "s|image: .*nginx.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${GITHUB_SHA::7}|g" docker-compose.yml
            sed -i "s|image: .*mariadb.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/mariadb:${GITHUB_SHA::7}|g" docker-compose.yml
            
            echo "Запускаю контейнеры через docker-compose..."
            docker-compose up -d

            echo "Настраиваю файрвол (UFW)..."
            sudo apt update
            sudo apt install -y ufw
            sudo ufw allow OpenSSH
            sudo ufw allow 80
            sudo ufw allow 443
            sudo ufw deny 3306
            sudo ufw --force enable
            sudo ufw status

            echo "Деплой завершен успешно!"