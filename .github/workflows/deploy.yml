name: deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: üîç Check which directories changed
        id: changed_dirs
        run: |
          CHANGED=$(git diff --name-only HEAD HEAD~1 | grep -E '^(mariadb|nginx|wordpress|phpmyadmin)/' | cut -d/ -f1 | sort -u | tr '\n' ' ')
          echo "Changed directories: $CHANGED"
          echo "dirs=$CHANGED" >> $GITHUB_OUTPUT

      - name: üê≥ Build Docker images
        run: |
          for dir in ${{ steps.changed_dirs.outputs.dirs }}; do
            echo "Building $dir image..."
            DOCKER_BUILDKIT=1 docker build -t $dir:cloud1 -f ./$dir/Dockerfile ./$dir
            docker save -o $dir.tar $dir:cloud1
          done

      - name: üê≥ Upload Docker images
        uses: actions/upload-artifact@v4
        with:
          name: docker-images
          path: "*.tar"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: üíø Download Docker images 
        uses: actions/download-artifact@v4
        with:
          name: docker-images
          path: .

      # copy ssh key to ansible worker so it can access vps
      - name: Set up SSH keys 
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config # disable host key checking
          
          mkdir -p ansible
          cp ~/.ssh/id_rsa ansible/web_private_key
          chmod 600 ansible/web_private_key

      - name: üÖ∞Ô∏è Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: üÖ∞Ô∏è Run Ansible playbook
        run: ansible-playbook -i ansible/hosts.ini ansible/deploy.yml
        env:
            ANSIBLE_HOST_KEY_CHECKING: False
            DB_NAME: ${{ secrets.DB_NAME }}
            DB_USER: ${{ secrets.DB_USER }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            DB_HOST: ${{ secrets.DB_HOST }}
            