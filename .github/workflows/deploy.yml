name: Cloud-0 Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker Login (optional if using ghcr.io)
        # Если используете ghcr.io, нужно залогиниться
        # run: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker images
        run: |
          docker build -t mariadb:latest -f ./mariadb/Dockerfile ./mariadb
          docker build -t nginx:latest -f ./nginx/Dockerfile ./nginx

      - name: Save Docker images
        run: |
          docker save -o mariadb.tar mariadb:latest
          docker save -o nginx.tar nginx:latest

      - name: Upload Docker images
        uses: actions/upload-artifact@v3
        with:
          name: docker-images
          path: "*.tar"

jobs:
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker images
        uses: actions/download-artifact@v3
        with:
          name: docker-images
          path: .

      - name: Deploy via ssh-action
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Starting deployment..."
            DEPLOY_DIR="/home/deploy/my-app"
            mkdir -p "$DEPLOY_DIR"
            cd "$DEPLOY_DIR"

            # Load Docker images
            docker load -i mariadb.tar
            docker load -i nginx.tar

            # Создаем docker-compose.yml (пример, если его нет в репо)
            cat > docker-compose.yml <<EOF
            version: "3.8"
            services:
              nginx:
                image: nginx:latest # Используем локальные имена
                ports:
                  - 80:80
                  - 443:443
              mariadb:
                image: mariadb:latest # Используем локальные имена
                volumes:
                  - db_vol:/var/lib/mysql
            volumes:
              db_vol:
            EOF

            docker-compose up -d --build # Запускаем